{"version":3,"sources":["files/loading.gif","components/PrivateRoute.js","components/LandingPage.js","actions/index.js","components/Register.js","components/Login.js","components/FailedLogin.js","components/CreateList.js","components/AddEntry.js","components/GetListId.js","components/EntryEditor.js","components/ListEditor.js","components/Dashboard.js","components/ListDisplay.js","App.js","reducers/index.js","index.js"],"names":["module","exports","props","Component","component","rest","render","localStorage","getItem","to","LandingPage","className","style","textDecoration","color","getListId","userId","dispatch","type","axios","get","then","res","payload","data","catch","err","Register","handleChange2","evt","preventDefault","setState","target","name","value","handleSubmit","a","state","isVerified","email","password","firstName","lastName","profilePictureURL","register","history","push","alert","message","recaptchaLoaded","bind","verifyCallback","console","log","response","this","id","onSubmit","placeholder","onChange","required","sitekey","onloadCallback","React","mapDispatchToProps","post","setItem","token","listId","withRouter","connect","Login","handleChange","login","error","isLoading","errorMessage","FailedLogin","CreateList","backColor","txtColor","fontSelection","createList","AddEntry","referencingURL","description","linkTitle","imgURL","addEntry","useThisURL","result","entryId","GetListId","handleClick2","EntryEditor","editEntry","match","url","put","ListDisplay","links","goodId","counts","isLoadingListId","window","location","reload","dataNoEmpties","filter","hasOwnProperty","map","link","key","href","src","alt","count","onClick","deleteEntry","loadingGif","width","Dashboard","isLoadingListViews","listViews","removeItem","stuff","role","ListEditor","logout","loggedUser","rawLinks","displayingUserInfo","userFirstLastName","slice","App","exact","path","PrivateRoute","initialState","store","createStore","action","successMessage","applyMiddleware","thunk","logger","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.11b3e279.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.ef474d09.gif\";","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\nexport default function(props) {\n    const {\n        component:Component,\n        ...rest\n    } = props\n\n    return (\n        <Route {...rest} render={()=>{\n            const token = localStorage.getItem('token')\n            return token\n                ? <Component />\n                : <Redirect to=\"/failedlogin\" />\n        }} />\n    )\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst LandingPage = () => {\n    return (\n        <div>\n            <h1>Link-In.bio/</h1>\n            <div className='signupcards'>\n                <Link to='/register' style={{ textDecoration: 'none', color: 'black' }}>\n                    <div className='signup'>\n                        <h3>I'm here for my own LinkList</h3>\n                        <p>Let's Begin - Register - </p>\n                    </div>\n                </Link>\n                <Link to='/login' style={{ textDecoration: 'none', color: 'black' }}>\n                    <div className='signup'>\n                        <h3>I already have an account</h3>\n                        <p>I want to modify my LinkList</p>\n                    </div>\n                </Link>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default LandingPage","import axios from 'axios'\n\n//Action Types\nexport const REGISTER_USER_START = 'REGISTER_USER_START'\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS'\nexport const REGISTER_USER_FAILED = 'REGISTER_USER_FAILED'\n\nexport const LOGIN_USER_START = 'LOGIN_USER_START'\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS'\nexport const LOGIN_USER_FAILED = 'LOGIN_USER_FAILED'\n\nexport const CREATE_LIST_START = 'CREATE_LIST_START'\nexport const CREATE_LIST_SUCCESS = 'CREATE_LIST_SUCCESS'\nexport const CREATE_LIST_FAILED = 'CREATE_LIST_FAILED'\n\nexport const ADD_ENTRY_START = 'ADD_ENTRY_START'\nexport const ADD_ENTRY_SUCCESS = 'ADD_ENTRY_SUCCESS'\nexport const ADD_ENTRY_FAILED = 'ADD_ENTRY_FAILED'\n\nexport const EDIT_ENTRY_START = 'EDIT_ENTRY_START'\nexport const EDIT_ENTRY_SUCCESS = 'EDIT_ENTRY_SUCCESS'\nexport const EDIT_ENTRY_FAILED = 'EDIT_ENTRY_FAILED'\n\nexport const UPDATE_ENTRY_START = 'UPDATE_ENTRY_START'\nexport const UPDATE_ENTRY_SUCCESS = 'UPDATE_ENTRY_SUCCESS'\nexport const UPDATE_ENTRY_FAILED = 'UPDATE_ENTRY_FAILED'\n\nexport const DELETE_ENTRY_START = 'DELETE_ENTRY_START'\nexport const DELETE_ENTRY_SUCCESS = 'DELETE_ENTRY_SUCCESS'\nexport const DELETE_ENTRY_FAILED = 'DELETE_ENTRY_FAILED'\n\nexport const GET_LIST_ID_START = 'GET_LIST_ID_START'\nexport const GET_LIST_ID_SUCCESS = 'GET_LIST_ID_SUCCESS'\nexport const GET_LIST_ID_FAILED = 'GET_LIST_ID_FAILED'\n\n//Action Creators\nexport function register(email, password, firstName, lastName, profilePictureURL){\n    return (dispatch) => {\n        dispatch({type: REGISTER_USER_START})\n        return axios.post('https://link-in-bio.limited/auth/register', { email, password, firstName, lastName, profilePictureURL} )\n        .then((res) => {\n            const payload = res.data\n            console.log('registration payload', payload)\n            localStorage.setItem('token', res.data.token)\n            localStorage.setItem('userId', res.data.userId)\n            localStorage.setItem('email', res.data.email)\n            localStorage.setItem('firstName', res.data.firstName)\n            localStorage.setItem('profilePictureURL', res.data.profilePictureURL)\n            return axios.post('https://link-in-bio.limited/l/new', {'userId':res.data.userId, 'backColor':'#ffffff','txtColor':'#000000', 'fontSelection':'Roboto',})\n            .then((res) => {\n                console.log('res after create list after register', res)\n                localStorage.setItem('listId', res.data.listId)\n                console.log('getting saved item?', localStorage.getItem('listId'))\n                console.log('listId', res.data.listId)\n                console.log('typeof listId', typeof res.data['listId'])\n                // const payload2 = {...payload, listId: res.data.listId}\n                alert('User Registration Complete, Try Logging in now!')\n                dispatch({type:REGISTER_USER_SUCCESS, payload})\n                // const newURL = 'https://link-in.bio/dashboard'\n                // window.location.href(newURL)\n                console.log('end of code')\n            })\n            .catch((err) => {\n                dispatch({type:REGISTER_USER_FAILED, payload:err})\n            })\n        })    \n        .catch((err) => {\n            dispatch({type:REGISTER_USER_FAILED, payload:err})\n        })\n    }\n}\n\nexport function login(email, password){\n    return (dispatch) => {\n        dispatch({type: LOGIN_USER_START})\n        return axios.post('https://link-in-bio.limited/auth/login', { email, password })\n        .then((res) => {\n            const payload = res.data\n            localStorage.setItem('token', res.data.token)\n            localStorage.setItem('userId', res.data.userId)\n            localStorage.setItem('email', res.data.email)\n            localStorage.setItem('firstName', res.data.firstName)\n            // console.log(res.data.token,'LOG IS HERE <---')\n            dispatch({type: LOGIN_USER_SUCCESS, payload})\n        })\n        .catch((res) => {\n            const payload = res.response ? res.response.data : res\n            dispatch({type: LOGIN_USER_FAILED, payload})\n            console.log(res,'LOG IS HERE <---')\n        })\n    }\n}\n\nexport function createList(userId, backColor, txtColor, fontSelection){\n    return (dispatch) => {\n        dispatch({type: CREATE_LIST_START})\n        return axios.post('https://link-in-bio.limited/l/new', { userId, backColor, txtColor, fontSelection })\n        .then((res) => {\n            localStorage.setItem('listId', res.data.listId)\n            dispatch({type: CREATE_LIST_SUCCESS, payload: res.data})\n        })\n        .catch((err) => {\n            dispatch({type: CREATE_LIST_FAILED, payload:err})\n        })\n    }\n}\n\nexport function addEntry(userId, listId, referencingURL, description, linkTitle, imgURL){\n    return (dispatch) => {\n        dispatch({type: ADD_ENTRY_START})\n        return axios.post('https://link-in-bio.limited/e/new', { userId, listId, referencingURL, description, linkTitle, imgURL })\n        .then((res) => {\n            console.log('addEntry res.data.message', res.data.message);\n            console.log('addEntry res.data', res.data);\n\n            const useThisURL = `https://link-in-bio.limited/s/?eid=${res.data.result[0].entryId}&ref=${res.data.result[0].referencingURL}&red=f`\n            return axios.get(useThisURL)\n            .then((res) => {\n                console.log('statsRes', res)\n                alert('Entry added successfully, Try Returning to Your Dashboard and Refreshing the Page')\n                dispatch({type: ADD_ENTRY_SUCCESS, payload:res.data})\n            })\n        })\n        .catch((err) => {\n            dispatch({type: ADD_ENTRY_FAILED, payload:err})\n        })\n    }\n}\n\nexport function editEntry(entryId, referencingURL, description, linkTitle, imgURL){\n    return (dispatch) => {\n        dispatch({type: EDIT_ENTRY_START})\n        return axios.put('https://link-in-bio.limited/e/replaceEntry', {entryId, referencingURL, description, linkTitle, imgURL})\n        .then((res) => {\n            console.log('editEntry res.data', res.data)\n            alert('Entry Edited Successfully')\n            dispatch({type: EDIT_ENTRY_SUCCESS, payload:res.data})\n        })\n        .catch((err) => {\n            dispatch({type: EDIT_ENTRY_FAILED, payload:err})\n        })\n    }\n}\n\nexport function getListId(userId){\n    return (dispatch) => {\n        dispatch({type: GET_LIST_ID_START})\n        return axios.get(`https://link-in-bio.limited/l/${userId}`)\n        .then((res) => {\n            dispatch({type:GET_LIST_ID_SUCCESS, payload: res.data})\n        })\n        .catch((err) => {\n            dispatch({type:GET_LIST_ID_FAILED, payload:err})\n        })\n    }\n}","import React from 'react'\nimport Recaptcha from 'react-recaptcha'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { register } from '../actions'\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props)\n        // this.handleSubmit = this.handleSubmit.bind(this);\n        this.recaptchaLoaded = this.recaptchaLoaded.bind(this);\n        this.verifyCallback = this.verifyCallback.bind(this);\n        this.state = {\n            email: '',\n            password: '',\n            firstName: '',\n            lastName: '',\n            profilePictureURL: '',\n            isVerified:false,\n        }\n    }\n\n    handleChange2 = (evt) => {\n        evt.preventDefault()\n        this.setState({\n            [evt.target.name]: evt.target.value,\n        })\n    }\n\n    // handleSubmit = (evt) => {\n    //     evt.preventDefault()\n    //     const { email, password, firstName, lastName } = this.state\n    //     this.props.register(email, password, firstName, lastName)\n    //     this.setState({ email: '', password: '', firstName: '', lastName: '', })\n    //     if(typeof localStorage.getItem('listId') == 'number'){\n    //         this.props.history.push('./dashboard')\n    //     }\n    // }\n\n    recaptchaLoaded(){\n        console.log('catcha successfully loaded');\n    }\n\n    verifyCallback(response){\n        // console.log('response',response)\n        if (response){\n            this.setState({isVerified:true})\n        }\n        // console.log(this.state.isVerified)\n    }\n\n    handleSubmit = async (evt) => {\n        evt.preventDefault()\n        if(this.state.isVerified){\n            // alert('success')\n            const { email, password, firstName, lastName, profilePictureURL } = this.state\n            try {\n                this.setState({ email: '', password: '', firstName: '', lastName: '', profilePictureURL:'' })\n                await this.props.register(email, password, firstName, lastName, profilePictureURL)\n                this.props.history.push('./dashboard')\n            } catch (err){\n                alert(err.message)\n            }\n        } else {\n            alert('Please check the box to indicate you are a human!')\n        }\n       \n    }\n\n    render() {\n        const { email, password, firstName, lastName, profilePictureURL } = this.state\n        return (\n            <div>\n                <div className='signupheader'>\n                    <h1>LinkList Sign Up</h1>\n                    <p>Thanks for your interest!</p>\n                </div>\n                <form id=\"registrationForm\" onSubmit={this.handleSubmit}>\n                    <input type=\"text\" name=\"email\" placeholder=\"Email\" value={email} onChange={this.handleChange2} required /><br/>\n                    <input type=\"password\" name=\"password\" placeholder=\"Password\" value={password} onChange={this.handleChange2} required /><br/>\n                    <input type=\"text\" name=\"firstName\" placeholder=\"First Name\" value={firstName} onChange={this.handleChange2} required /><br/>\n                    <input type=\"text\" name=\"lastName\" placeholder=\"Last Name\" value={lastName} onChange={this.handleChange2} required /><br/>\n                    <input type=\"text\" name=\"profilePictureURL\" placeholder=\"Profile Picture URL\" value={profilePictureURL} onChange={this.handleChange2}  /><br/>\n                    {/*need to confirm password here*/}\n                    <Recaptcha\n                        sitekey=\"6Lf5n-cUAAAAACjg7VIXj2fUkfGK-zkeQ2mSXNGX\"\n                        render=\"explicit\"\n                        onloadCallback={this.recaptchaLoaded}\n                        verifyCallback={this.verifyCallback}\n                    />\n                    <br />\n                    <button className=\"abutton\" type=\"submit\">Sign Up</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = {\n    register\n}\nexport default withRouter(\n    connect(\n        null,\n        mapDispatchToProps\n    )(Register)\n)\n// export default connect(null, mapDispatchToProps)(Register)","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { login } from '../actions/index'\n\nclass Login extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            email: '',\n            password: '',\n        }\n    }\n\n    handleChange = (evt) => {\n        evt.preventDefault()\n        this.setState({\n            [evt.target.name]: evt.target.value,\n        })\n    }\n\n    handleSubmit = (evt) => {\n        evt.preventDefault()\n        const { email, password } = this.state\n\n        this.props.login(email, password)\n            .then(() => {\n                this.props.history.push(\"./dashboard\")\n            })\n            .catch((err) => { console.error(err) })\n    }\n\n    render() {\n        const { email, password } = this.state\n        const { isLoading } = this.props\n        return (\n            <div>\n                <h1>Log In</h1>\n                <form onSubmit={this.handleSubmit}>\n                    {/* {errorMessage && <p className=\"error\">{errorMessage}</p>} */}\n                    <input type=\"text\" name=\"email\" placeholder=\"email\" value={email} onChange={this.handleChange} /><br />\n                    <input type=\"password\" name=\"password\" placeholder=\"Password\" value={password} onChange={this.handleChange} /><br />\n                    {isLoading\n                        ? <p>Logging in...</p>\n                        : <button type=\"submit\">Log In</button>}\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isLoading: state.isLoading,\n    errorMessage: state.errorMessage\n})\n\nconst mapDispatchToProps = {\n    login,\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n    )(Login)\n)","import React from 'react'\n\nconst FailedLogin = () => {\n    return (\n        <div>\n            <h1>Your login attempt failed. Please go back and try again.</h1>\n        </div>\n    )\n}\n\nexport default FailedLogin","import React from 'react'\nimport { connect } from 'react-redux'\nimport { createList } from '../actions/index'\n\nclass CreateList extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            userId: localStorage.getItem('userId'),\n            backColor: '#ffffff',\n            txtColor: '#000000',\n            fontSelection: 'sans-serif',\n        }\n    }\n\n    handleChange = (evt) => {\n        evt.preventDefault()\n        this.setState({\n            [evt.target.name]: evt.target.value,\n        })\n    }\n\n    handleSubmit = (evt) => {\n        evt.preventDefault()\n        const { userId, backColor, txtColor, fontSelection } = this.state\n        this.props.createList(userId, backColor, txtColor, fontSelection)\n        this.setState({ userId:'', backColor:'', txtColor:'', fontSelection:'' })\n    }\n\n    render() {\n        const { userId, backColor, txtColor, fontSelection } = this.state\n        return (\n            <div>\n                <h1 className=\"newpickupheader\">Create A List</h1>\n                <form onSubmit={this.handleSubmit}>\n                    <input type=\"text\" name=\"userId\" value={userId} placeholder={localStorage.getItem('userId')} onChange={this.handleChange} required /><br />\n                    <input type=\"text\" name=\"backColor\" value={backColor} placeholder=\"Set Background Color\" onChange={this.handleChange} required /><br />\n                    <input type=\"text\" name=\"txtColor\" value={txtColor} placeholder=\"Set Text Color\" onChange={this.handleChange} required /><br />\n                    <input type=\"text\" name=\"fontSelection\" value={fontSelection} placeholder=\"Set Font\" onChange={this.handleChange} required /><br />\n                    <button type=\"submit\" className=\"abutton2\">Create List</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = { createList }\n\nexport default connect(null, mapDispatchToProps)(CreateList)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { addEntry } from '../actions/index'\nimport { withRouter } from 'react-router-dom'\n\n\nclass AddEntry extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            userId: localStorage.getItem('userId'),\n            listId: localStorage.getItem('listId'),\n            referencingURL: '',\n            description: '',\n            linkTitle: '',\n            imgURL:'',\n        }\n    }\n\n    handleChange = (evt) => {\n        evt.preventDefault()\n        this.setState({\n            [evt.target.name]: evt.target.value,\n        })\n    }\n\n    // handleSubmit = (evt) => {\n    //     evt.preventDefault()\n    //     const { userId, listId, referencingURL, description, linkTitle, imgURL } = this.state\n    //     this.props.addEntry(userId, listId, referencingURL, description, linkTitle, imgURL)\n    //     this.setState({ userId: localStorage.getItem('userId'), listId: '', referencingURL:'', description: '', linkTitle: '', imgURL:''})\n    // }\n\n    handleSubmit = async (evt) => {\n        evt.preventDefault()\n        const { userId, listId, referencingURL, description, linkTitle, imgURL } = this.state\n        try {\n            this.setState({ userId: localStorage.getItem('userId'), listId: '', referencingURL:'', description: '', linkTitle: '', imgURL:''})\n            await this.props.addEntry(userId, listId, referencingURL, description, linkTitle, imgURL)\n            this.props.history.push('./dashboard')\n        } catch (err){\n            alert(err.message)\n        }\n       \n    }\n\n    render() {\n        const { userId, listId, referencingURL, description, linkTitle, imgURL } = this.state\n        return (\n            <div>\n                <h1 className=\"newpickupheader\">Add a Link to Your List</h1>\n                <form onSubmit={this.handleSubmit}>\n                    {/* <input type=\"text\" name=\"userId\" value={userId} placeholder=\"Your User Id\" onChange={this.handleChange} required /><br /> */}\n                    {/* <input type=\"text\" name=\"listId\" value={listId} placeholder=\"Your List Id\" onChange={this.handleChange} required /><br /> */}\n                    <p className=\"addEntryText\">Add a URL in the form http://.../ </p>\n                    <p className=\"addEntryText\">Or in the form https://.../ </p>\n                    <p className=\"addEntryText\">(starting with http or https and ending in a slash)</p>\n                    <p className=\"addEntryText\">Add an Image URL in the form http://.../...jpg </p>\n                    <p className=\"addEntryText\">Or in the form https://.../...bmp </p>\n                    <p className=\"addEntryText\">(starting with http or https)</p>\n                    <p className=\"addEntryText\">(and ending in the file extension of the linked image)</p>\n                    <input type=\"text\" name=\"referencingURL\" value={referencingURL} placeholder=\"Link URL\" onChange={this.handleChange} required /><br />\n                    <input type=\"text\" name=\"linkTitle\" value={linkTitle} placeholder=\"Link Title\" onChange={this.handleChange} required /><br />\n                    <input type=\"text\" name=\"description\" value={description} placeholder=\"Link Description\" onChange={this.handleChange} required /><br />\n                    <input type=\"text\" name=\"imgURL\" value={imgURL} placeholder=\"Image URL\" onChange={this.handleChange} /><br />\n                    <button type=\"submit\" className=\"abutton2\">Add Link to List</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = { addEntry }\n\nexport default withRouter(\n    connect(\n        null, \n        mapDispatchToProps\n    )(AddEntry)\n)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { getListId } from '../actions/index'\nimport axios from 'axios'\n\nclass GetListId extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            userId: localStorage.getItem('userId'),\n            listId: '',\n            // loading: '',\n        }\n    }\n\n\n    // getListId = (evt) => {\n    //     evt.preventDefault();\n    //     console.log('this far')\n    //     const { userId } = this.state\n    //     return axios.get(`https://link-in-bio.limited/l/${userId}`)\n    //     .then(res => {\n    //         console.log(res)\n    //         const listId = res.data.listId\n    //         this.setState({listId})        \n    //         this.setState({loading: false})\n\n    //     })\n    //     .catch(err => console.log(err))\n\n    // }\n\n    handleClick2 = (evt) => {\n        evt.preventDefault();\n        const userId = localStorage.getItem('userId')\n        getListId(userId)\n        // this.setState({loading: true})\n    }\n    handleSubmit = (evt) => {\n        evt.preventDefault()\n        const { userId, backColor, txtColor, fontSelection } = this.state\n        this.props.createList(userId, backColor, txtColor, fontSelection)\n        this.setState({ userId:'', backColor:'', txtColor:'', fontSelection:'' })\n    }\n\n    render() {\n\n        return (\n            <div>\n                <h3>Your List Id:</h3>\n\n                <button type=\"submit\">Click Here</button>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = { getListId }\n\nexport default connect(null, mapDispatchToProps)(GetListId)","import React from 'react'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport { editEntry } from '../actions/index'\nimport { withRouter, Link } from 'react-router-dom'\n\n\nclass EntryEditor extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isLoading: false,\n            entryId: '',\n            referencingURL: '',\n            description: '',\n            linkTitle: '',\n            imgURL: '',\n            // successMessage: null,\n        }\n    }\n\n    handleChange = (evt) => {\n        evt.preventDefault()\n        this.setState({\n            [evt.target.name]: evt.target.value,\n        })\n    }\n\n    handleSubmit = (evt) => {\n        evt.preventDefault()\n\n        const { entryId, referencingURL, description, linkTitle, imgURL } = this.state\n        console.log(linkTitle, description, referencingURL, entryId, imgURL)\n        this.props.editEntry( entryId, referencingURL, description, linkTitle, imgURL)\n        this.setState({ referencingURL:'', description: '', linkTitle: '', imgURL:''})\n    }\n\n    UNSAFE_componentWillMount(props){\n        const useThisURL = `https://link-in-bio.limited/e${this.props.match.url}`\n        return axios.get(useThisURL)\n        .then(response => {\n            console.log('response', response)\n            this.setState({userId:response.data[0].userId})\n            this.setState({entryId:response.data[0].entryId})\n            this.setState({referencingURL:response.data[0].referencingURL})\n            this.setState({description:response.data[0].description})\n            this.setState({linkTitle:response.data[0].linkTitle})\n            this.setState({imgURL:response.data[0].imgURL})\n        })\n    }\n\n    \n\n    render(props) {\n        const { entryId, referencingURL, description, linkTitle, imgURL } = this.state\n        return (\n            <div>\n                <h1 className=\"newpickupheader\">Edit an Entry</h1>\n                <form onSubmit={this.handleSubmit}>\n                    {/* <input type=\"text\" name=\"userId\" value={userId} placeholder=\"Your User Id\" onChange={this.handleChange} required /><br /> */}\n                    {/* <input type=\"text\" name=\"entryId\" value={entryId} placeholder=\"Your Entry Id\" onChange={this.handleChange} required /><br /> */}\n                    <p>Link URL:</p>\n                    <input type=\"text\" name=\"referencingURL\" value={referencingURL} placeholder=\"Link URL\" onChange={this.handleChange} required /><br />\n                    <p>Link Title:</p>\n                    <input type=\"text\" name=\"linkTitle\" value={linkTitle} placeholder=\"Link Title\" onChange={this.handleChange} required /><br />\n                    <p>Link Description:</p>\n                    <input type=\"text\" name=\"description\" value={description} placeholder=\"Link Description\" onChange={this.handleChange} required /><br />\n                    <p>Link Image URL:</p>\n                    <input type=\"text\" name=\"imgURL\" value={imgURL} placeholder=\"Link Image URL\" onChange={this.handleChange} required /><br />\n                    <button type=\"submit\" className=\"abutton2\">Submit Changes to Link</button>\n                </form>\n                {/* {this.state.successMessage ? <h4>Entry Updated Successfully</h4> : <span></span>} */}\n                <Link to='/dashboard'><span className=\"abutton\">Back</span></Link>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = { editEntry }\n\nexport default connect(null, mapDispatchToProps)(EntryEditor)","import React from 'react'\nimport axios from 'axios'\n// import ellipsisGif from '../files/ellipsis.gif'\nimport loadingGif from '../files/loading.gif'\nimport EditEntry from './EntryEditor'\n// import { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport { withRouter, Redirect, Link } from 'react-router-dom'\n\n\nclass ListDisplay extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            links: [],\n            isLoading:true,\n            goodId:null,\n            counts: [],\n            isLoadingListId: true,\n        }\n    }\n\n    // getCounts(){\n    //     console.log('getCounts running')\n    //     const useThisURL = `https://link-in-bio.limited/s/st/${localStorage.getItem('userId')}`\n    //     return axios.get(useThisURL)\n    //     .then(res => {\n    //         console.log('getCounts res', res)\n    //         const linksCounts = res.data\n    //         console.log('linksCounts', linksCounts)\n    //         const newArray = this.state.links.forEach((link) => {\n    //             console.log('foreach link', link)\n\n    //         })\n    //         console.log('newArray', newArray)\n    //         let mergedLinks = []\n    //         for(let i=0; i<=res.data.length;i++){\n    //             let value = {...this.state.links[i], ...res.data[i]}\n    //             console.log('value', value)\n    //             mergedLinks.push(value)\n    //         }\n    //         console.log('merged', mergedLinks)\n    //         // for i in range(this.state.links.length) {\n    //         //     this.state.links.forEach(link => {\n    //         //         if(linksCounts[i].entryId == link[i].entryId){\n    //         //             link[i].count = linksCounts[i].count\n    //         //         }\n    //         //         else if(linksCounts[i].entryId == null){\n    //         //             link[i].count = linksCounts[i].count  \n    //         //         }\n    //         //     })\n    //             // i++\n    //         console.log('mapped')\n    //     })\n    //     .catch(err => console.log(err))\n    // }\n\n    deleteEntry(entryId){\n        console.log('entryId',entryId)\n        const useThisURL = `https://link-in-bio.limited/e/deleteEntry/`\n        return axios.post(useThisURL, {entryId: entryId})\n        .then(response => {\n            console.log(response)\n            alert('Entry successfully deleted')\n            window.location.reload(false)\n        })\n\n    }\n\n    UNSAFE_componentWillMount(props) {\n        // console.log('url', this.props.match.url)\n        // const useThisURL = `https://link-in-bio.limited/${localStorage.getItem('userId')}`\n        const useThisURL = `https://link-in-bio.limited/s/aio/${localStorage.getItem('userId')}`\n        // console.log('useThisURL', useThisURL)\n        return axios.get(useThisURL)\n            .then(response => {\n                // console.log('response', response)\n                return response;\n            }).then(data => {\n                console.log('data', data)\n                // console.log(this.state)\n                this.setState({isLoading: false});\n                // console.log(this.state)\n                const dataNoEmpties = data.data.filter(links => links.hasOwnProperty('linkTitle'))\n                console.log('dataNoEmpties', dataNoEmpties)\n                const links = (dataNoEmpties.map((link) => {\n                    // const entryValues = {entryId:link.entryId, listId:link.listId, referencingURL:link.referencingURL, description:link.description, linkTitle:link.linkTitle}\n                    // console.log('entryValues', entryValues)\n                    return (\n\n                            <div className='signup' key={link.referencingURL}>\n                                <a className='linkTitle' href={`${link.referencingURL}`}>\n                                    <img className='image' src={link.imgURL} alt={link.imgURL} /> <br /> <br />\n                                    {link.linkTitle}\n                                </a> <br />\n                                <p>{link.description}</p>\n                                {/* <p>{link.entryId}</p> */}\n                                <br />\n                                {/* <p>View Count: {link.count == null ? <span>{link.count ? link.count : <span>--{link.count}--</span> }</span> : link.count}</p> */}\n                                <p>View Count: {link.count}</p> \n                                <br />\n                                {/* <a href=\"#neworder3\" className=\"abutton\" role=\"button\">Create a New Entry</a> */}\n                                {/* <div className=\"modal\" id=\"neworder3\"> */}\n                                {/* <div className=\"modal-container\"> */}\n                                        {/* <EditEntry entryId={link.entryId} listId={link.listId} referencingURL={link.referencingURL} description={link.description} linkTitle={link.linkTitle}/> */}\n                                        {/* eslint-disable-next-line */}\n                                        {/* <a href=\"#\" className=\"abutton2\" role=\"button\">Close</a> */}\n                                    {/* </div> */}\n                                {/* </div> */}\n                                {/* <button onClick={(entryValues) => {this.editEntry(entryValues)}}>Edit Entry</button> */}\n                                <Link to={`/editEntry/${link.entryId}`}><span className=\"abutton\">Edit Entry</span></Link>\n                                <button className=\"abutton\" onClick={() => {this.deleteEntry(link.entryId)}}>Delete Entry</button>\n                            </div>\n\n                    )\n                }))\n                // console.log('state', this.state)\n                // console.log('links', links)\n                // this.getCounts()\n                this.setState({links: links})\n            })\n    }\n\n    \n    // componentDidMount(props){\n    //     const useThisURL = `https://link-in-bio.limited/s/u/${localStorage.getItem('userId')}`\n    //     return axios.get(useThisURL)\n    //     .then(res => {\n    //         console.log(res)\n    //         const counts = res.data.map((countVal) => {\n    //             return (\n    //                 <div className=\"signup\" key={countVal.entryId}>\n    //                     <p>{countVal.entryId}</p>\n    //                     <p>{countVal.count}</p>\n\n    //                 </div>\n    //             )\n    //         })\n    //         this.setState({counts: counts})\n    //     })\n    //     .catch(err => console.log(err))\n    // }\n\n\n\n    render() {\n        const isLoading = this.state.isLoading;\n            {if(isLoading===true){\n                // return <h1>Loading <img src={ellipsisGif} style={{width:\"30px\", paddingTop:\"20px\"}}/></h1>\n                return <img src={loadingGif} style={{width:\"200px\"}}/>\n            }else{\n                return (\n                    <div className=\"linkList\">\n                        <div>\n                            {this.state.links}\n                        </div>\n                        {/* <div>\n                            {this.state.counts}\n                        </div> */}\n                        {/* <button onClick={() => {console.log('clicked'); this.getCounts()}}>Get Counts</button> */}\n                    </div>\n\n                )\n            }\n        }\n        \n    }\n}\n\n\nexport default ListDisplay","import React from 'react'\nimport { connect} from 'react-redux'\nimport { withRouter, Link } from 'react-router-dom'\nimport CreateList from './CreateList'\nimport AddEntry from './AddEntry'\nimport GetListId from './GetListId'\nimport ListEditor from './ListEditor'\nimport axios from 'axios'\n\n\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            listId: null,\n            isLoadingListId: true,\n            isLoadingListViews: true,\n            listViews:null\n        }\n    }\n\n    logout(){\n        localStorage.removeItem('listId');\n        localStorage.removeItem('email');\n        localStorage.removeItem('firstName');\n        localStorage.removeItem('userId');\n        localStorage.removeItem('token');\n        return\n    }\n\n    componentDidMount(props) {\n        const useThisURL = `https://link-in-bio.limited/l/list4user/${localStorage.getItem('userId')}`\n        return axios.get(useThisURL)\n            .then(response => {\n                console.log('dashboard cdm', response.data)\n                // localStorage.setItem('listId', response.data[0].listId)\n                this.setState({isLoadingListId: false})\n                localStorage.setItem('listId', response.data[0].listId)\n                this.setState({listId: response.data[0].listId})\n            })\n            .then(stuff => {\n                console.log('stuff', stuff)\n                const listId = localStorage.getItem('listId')\n                // console.log('listid', listId)\n                const useThisURL = `https://link-in-bio.limited/s/listViews/${listId}`\n                return axios.get(useThisURL)\n                .then(response => {\n                    console.log('successfully viewing listViews')\n                    console.log('response.data', response.data['listViews'])\n                    this.setState({ listViews: response.data['listViews'] })\n                    this.setState({ isLoadingListViews: false })\n                    console.log('listViews updated')\n                    console.log('this.state', this.state)\n                })\n                .catch(error => console.log(error))\n\n            })\n    }\n    // const {loggedUser} = props\n    // console.log(loggedUser)\n    render() {\n        return (\n            <div>\n                <h1>Dashboard</h1>\n                <p>Welcome {localStorage.getItem('firstName')}!</p>\n                <p>Your User Id is {localStorage.getItem('userId')}</p>\n                {/* <p>Your List Id is {localStorage.getItem('listId')}</p> */}\n                <p>Your List Id is {localStorage.getItem('listId')}</p>\n                <p>Your List Views is {this.state.isLoadingListViews ? <span> Loading...</span> : this.state.listViews}</p>\n                <p>To get started, create a list, then add your entries!</p>\n                <p>Your LinkList will be hosted at: <a alt=\"Your LinkList\" href={`http://link-in.bio/${localStorage.getItem('userId')}`}>http://link-in.bio/{localStorage.getItem('userId')}</a></p>\n                {/* <a href=\"#neworder\" className=\"abutton\" role=\"button\">Create a New List</a>\n                <div className=\"modal\" id=\"neworder\">\n                    <div className=\"modal-container\">\n                        <CreateList />\n                        eslint-disable-next-line\n                        <a href=\"#\" className=\"abutton2\" role=\"button\">Close</a>\n                    </div>\n                </div>\n                <br /> */}\n                <br />\n                {/* <a href=\"#neworder2\" className=\"abutton\" role=\"button\">Get List Id</a>\n                <div className=\"modal\" id=\"neworder2\">\n                    <div className=\"modal-container\">\n                        <GetListId />\n                        {/* eslint-disable-next-line */}\n                        {/* <a href=\"#\" className=\"abutton2\" role=\"button\">Close</a>\n                    </div>\n                </div>\n                <br /><br /> */} \n                <a href=\"#neworder3\" className=\"abutton\" role=\"button\" id=\"createNewEntry\">Create a New Entry</a>\n                <div className=\"modal\" id=\"neworder3\">\n                    <div className=\"modal-container\">\n                        <AddEntry />\n                        {/* eslint-disable-next-line */}\n                        <a href=\"#\" className=\"abutton2\" role=\"button\">Close</a>\n                    </div>\n                </div>\n                <div>\n                    <ListEditor />\n                </div>\n                <br /><br />\n                {/* <button type=\"button\" className=\"abutton\">Log Out</button> */}\n                <Link onClick={this.logout} to='/'><span className=\"abutton\">Log Out</span></Link>            \n                <h4>©2020 Link-In.bio/</h4>\n                {/* <MyRequestsBusiness /> */}\n            </div>\n        )\n    }\n    \n}\n\nconst mapStateToProps = (state) => {\n    return {loggedUser: state.loggedUser}\n}\n\n\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n    )(Dashboard)\n)\n","import React from 'react'\nimport axios from 'axios'\n// import ellipsisGif from '../files/ellipsis.gif'\nimport loadingGif from '../files/loading.gif'\n\nclass ListDisplay extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            links: [],\n            rawLinks:null,\n            isLoading:true,\n            goodId:null,\n            listId:null,\n            profilePictureURL:null,\n            displayingUserInfo:null,\n            userFirstLastName:null,\n        }\n    }\n\n    UNSAFE_componentWillMount(props) {\n        // console.log('url', this.props.match.url)\n        const useThisURL = `https://link-in-bio.herokuapp.com${this.props.match.url}`\n        // console.log('useThisURL', useThisURL)\n        return axios.get(useThisURL)\n            .then(response => {\n                // console.log('response', response)\n                return response;\n            }).then(data => {\n                console.log('data', data)\n                // console.log(this.state)\n                this.setState({isLoading: false});\n                console.log('data.data.listid', data.data[0].listId)\n                const listId = data.data[0].listId\n                const userFirstLastName = `${data.data[0].firstName} ${data.data[0].lastName[0].slice(0,1)}.`\n                const profilePictureURL = `${data.data[0].profilePictureURL}`\n                this.setState({listId:listId})\n                this.setState({profilePictureURL:profilePictureURL})\n                this.setState({userFirstLastName:userFirstLastName})\n                console.log('this.state', this.state)\n                // console.log(this.state)\n                const links = (data.data.map((link) => {\n                    // localStorage.setItem('listId', link.listId)\n                    return (\n\n                            <div className='signup' key={link.entryId}>\n                                <a className='linkTitle' href={`http://link-in-bio.herokuapp.com/s/?eid=${link.entryId}&ref=${link.referencingURL}`}>\n                                    <img className='image' src={link.imgURL} alt={link.imgURL} /> <br /> <br />\n                                    {link.linkTitle}\n                                </a> <br />\n                                <p>{link.description}</p>\n                            </div>\n\n                    )\n                }))\n                // console.log('state', this.state)\n                // console.log('links', links)\n                this.setState({links: links})\n                const useThisURL = `https://link-in-bio.limited/s/ili/${this.state.listId}`\n                return axios.get(useThisURL)\n                .then(response => {\n                    console.log('response', response)\n                    console.log('list visit successfully logged')\n                })\n                .catch(error => console.log(error))\n            })\n    }\n\n    // componentDidMount(props) {\n\n    // }\n\n    render() {\n        const isLoading = this.state.isLoading;\n            {if(isLoading===true){\n                // return <h1>Loading <img src={ellipsisGif} style={{width:\"30px\", paddingTop:\"20px\"}}/></h1>\n                return <img src={loadingGif} alt=\"Loading...\" style={{width:\"200px\"}}/>\n            }else{\n                return (\n                    <div className=\"linkList\">\n                        <div>\n                            {this.state.links}\n                        </div>\n                        <div>\n                            <h3>\n                                <img src={this.state.profilePictureURL} alt={this.state.profilePictureURL} style={{width:\"200px\"}}/> \n                                <br />\n                                {this.state.userFirstLastName}\n                            </h3>\n                            <p>~List Creator~</p>\n                        </div>\n                        <h4>©2020 <a href=\"http://link-in.bio/\">Link-In.bio/</a></h4>\n                    </div>\n\n                )\n            }\n        }\n        \n    }\n}\n\n\nexport default ListDisplay","import React from 'react';\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom'\nimport PrivateRoute from './components/PrivateRoute'\nimport LandingPage from './components/LandingPage'\nimport Register from './components/Register'\nimport Login from './components/Login'\nimport FailedLogin from './components/FailedLogin'\nimport Dashboard from './components/Dashboard'\nimport CreateList from './components/CreateList'\nimport AddEntry from './components/AddEntry'\nimport EntryEditor from './components/EntryEditor'\nimport ListDisplay from './components/ListDisplay'\n\n\n\nclass App extends React.Component {\n\n  // logout = (evt) => {\n  //   evt.preventDefault()\n  //   localStorage.removeItem('token')\n  //   this.props.history.push('/login')\n  // }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Switch>\n        <Route exact path=\"/\" component={LandingPage} />\n        <Route exact path=\"/register\" render={props => <Register {...props} history={this.props.history}/>} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/failedlogin\" component={FailedLogin} />\n        <Route exact path=\"/listdisplay\" component={ListDisplay}/>\n        <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n        <PrivateRoute exact path=\"/createlist\" component={CreateList} />\n        <PrivateRoute exact path=\"/addentry\" component={AddEntry} />\n        <Route path={`/editEntry/:entryId`} render={props => <EntryEditor {...props} />} />\n        <Route path=\"/:id\" render={props => <ListDisplay {...props}/>} />\n        {/* <PrivateRoute exact path=\"/editentry\" component={EditEntry} /> */}\n        </Switch>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","//Action Imports\nimport {\n    REGISTER_USER_START,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILED,\n    LOGIN_USER_START,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAILED,\n    CREATE_LIST_START,\n    CREATE_LIST_SUCCESS,\n    CREATE_LIST_FAILED,\n    ADD_ENTRY_START,\n    ADD_ENTRY_SUCCESS,\n    ADD_ENTRY_FAILED,\n    EDIT_ENTRY_START,\n    EDIT_ENTRY_SUCCESS,\n    EDIT_ENTRY_FAILED,\n    UPDATE_ENTRY_START,\n    UPDATE_ENTRY_SUCCESS,\n    UPDATE_ENTRY_FAILED,\n    DELETE_ENTRY_START,\n    DELETE_ENTRY_SUCCESS,\n    DELETE_ENTRY_FAILED,\n    GET_LIST_ID_START,\n    GET_LIST_ID_SUCCESS,\n    GET_LIST_ID_FAILED\n} from '../actions/'\n\n//Initial State Object\nconst initialState = {\n\n}\n\n//The Single Reducer for the Whole Application\nexport const reducer = (state=initialState, action) => {\n    switch(action.type){\n        case REGISTER_USER_START:\n            return {\n                ...state,\n                isLoading:true,\n            }\n        case REGISTER_USER_SUCCESS:\n            return {\n                ...state,\n                isLoading:false,\n                payload: action.payload,\n                // payload2:action.payload2,\n                errorMessage: null,\n            }\n        case REGISTER_USER_FAILED:\n            return {\n                ...state,\n                isLoading:false,\n                errorMessage: action.payload,\n            }\n        case LOGIN_USER_START:\n            return {\n                ...state,\n                isLoading: true,\n            }\n        case LOGIN_USER_SUCCESS:\n            return {\n                ...state,\n                isLoading:false,\n                payload: action.payload,\n                errorMessage: null,\n                loggedUser: action.payload\n            }\n        case LOGIN_USER_FAILED:\n            return {\n                ...state, \n                isLoading:false,\n                errorMessage: action.payload,\n            }\n        case CREATE_LIST_START:\n            return {\n                ...state,\n                isLoading:true,\n        }\n        case CREATE_LIST_SUCCESS:\n            return {\n                ...state,\n                isLoading:false,\n                errorMessage: null,\n            }\n        case CREATE_LIST_FAILED:\n            return {\n                ...state,\n                isLoading:false,\n                errorMessage: action.payload,\n        }\n        case ADD_ENTRY_START:\n            return {\n                ...state,\n                isLoading:true,\n        }\n        case ADD_ENTRY_SUCCESS:\n            return {\n                ...state,\n                isLoading:false,\n                errorMessage: null,\n            }\n        case ADD_ENTRY_FAILED:\n            return {\n                ...state,\n                isLoading:false,\n                errorMessage: action.payload,\n            }\n        case EDIT_ENTRY_START:\n            return {\n                ...state,\n                isLoading:true,\n            }\n        case EDIT_ENTRY_SUCCESS:\n            return {\n                ...state,\n                isLoading:false,\n                errorMessage:null,\n                successMessage:action.payload,\n            }\n        case EDIT_ENTRY_FAILED:\n            return {\n                ...state,\n                isLoading:false,\n                errorMessage:action.payload,\n            }\n        case UPDATE_ENTRY_START:\n            return {\n                ...state,\n                isLoading:true,\n            }\n        case UPDATE_ENTRY_SUCCESS:\n            return {\n                ...state,\n                isLoading:false,\n                errorMessage:null,\n                successMessage:action.payload,\n            }\n        case UPDATE_ENTRY_FAILED:\n            return {\n                ...state,\n                isLoading:false,\n                errorMessage: action.payload\n            }\n        case DELETE_ENTRY_START:\n            return {\n                ...state,\n                isLoading:true,\n            }\n        case DELETE_ENTRY_SUCCESS:\n            return {\n                ...state,\n                isLoading:false,\n            }\n        case DELETE_ENTRY_FAILED:\n            return {\n                ...state,\n                isLoading:false,\n                error: action.payload,\n            }\n        case GET_LIST_ID_START:\n            return {\n                ...state,\n                isLoading:true,\n            }\n        case GET_LIST_ID_SUCCESS:\n            return {\n                ...state,\n                isLoading:false,\n                payload: action.payload\n            }\n        case GET_LIST_ID_FAILED:\n            return {\n                ...state,\n                isLoading:false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport logger from 'redux-logger'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter, Switch } from 'react-router-dom'\nimport { reducer } from './reducers'\n\n\nconst store = createStore(reducer, applyMiddleware(thunk, logger))\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <Switch>\n        <App />\n      </Switch>\n    </BrowserRouter>\n  </Provider>, document.getElementById('root'));"],"sourceRoot":""}