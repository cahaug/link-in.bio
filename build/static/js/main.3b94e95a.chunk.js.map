{"version":3,"sources":["components/PrivateRoute.js","components/LandingPage.js","actions/index.js","components/Register.js","components/Login.js","components/FailedLogin.js","components/CreateList.js","components/Dashboard.js","components/AddEntry.js","App.js","reducers/index.js","index.js"],"names":["props","Component","component","rest","render","localStorage","getItem","to","LandingPage","className","style","textDecoration","color","REGISTER_USER_START","REGISTER_USER_SUCCESS","REGISTER_USER_FAILED","LOGIN_USER_START","LOGIN_USER_SUCCESS","LOGIN_USER_FAILED","CREATE_LIST_START","CREATE_LIST_SUCCESS","CREATE_LIST_FAILED","ADD_ENTRY_START","ADD_ENTRY_SUCCESS","ADD_ENTRY_FAILED","Register","handleChange2","evt","preventDefault","setState","target","name","value","handleSubmit","state","email","password","firstName","lastName","register","history","push","this","onSubmit","type","placeholder","onChange","required","React","mapDispatchToProps","dispatch","axios","post","then","res","payload","data","setItem","token","userId","catch","err","connect","Login","handleChange","login","console","error","isLoading","response","log","withRouter","errorMessage","FailedLogin","CreateList","backColor","txtColor","fontSelection","createList","loggedUser","alt","href","role","id","AddEntry","listId","referencingURL","description","linkTitle","addEntry","message","App","exact","path","PrivateRoute","Dashboard","initialState","store","createStore","action","applyMiddleware","thunk","logger","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3b94e95a.chunk.js","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\nexport default function(props) {\n    const {\n        component:Component,\n        ...rest\n    } = props\n\n    return (\n        <Route {...rest} render={()=>{\n            const token = localStorage.getItem('token')\n            return token\n                ? <Component />\n                : <Redirect to=\"/failedlogin\" />\n        }} />\n    )\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst LandingPage = () => {\n    return (\n        <div>\n            <h1>Link-In.bio/</h1>\n            <div className='signupcards'>\n                <Link to='/register' style={{ textDecoration: 'none', color: 'black' }}>\n                    <div className='signup'>\n                        <h3>I'm here for my own LinkList</h3>\n                        <p>Let's Begin - Register - </p>\n                    </div>\n                </Link>\n                <Link to='/login' style={{ textDecoration: 'none', color: 'black' }}>\n                    <div className='signup'>\n                        <h3>I already have an account</h3>\n                        <p>I want to modify my LinkList</p>\n                    </div>\n                </Link>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default LandingPage","import axios from 'axios'\n\n//Action Types\nexport const REGISTER_USER_START = 'REGISTER_USER_START'\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS'\nexport const REGISTER_USER_FAILED = 'REGISTER_USER_FAILED'\n\nexport const LOGIN_USER_START = 'LOGIN_USER_START'\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS'\nexport const LOGIN_USER_FAILED = 'LOGIN_USER_FAILED'\n\nexport const CREATE_LIST_START = 'CREATE_LIST_START'\nexport const CREATE_LIST_SUCCESS = 'CREATE_LIST_SUCCESS'\nexport const CREATE_LIST_FAILED = 'CREATE_LIST_FAILED'\n\nexport const ADD_ENTRY_START = 'ADD_ENTRY_START'\nexport const ADD_ENTRY_SUCCESS = 'ADD_ENTRY_SUCCESS'\nexport const ADD_ENTRY_FAILED = 'ADD_ENTRY_FAILED'\n\nexport const UPDATE_ENTRY_START = 'UPDATE_ENTRY_START'\nexport const UPDATE_ENTRY_SUCCESS = 'UPDATE_ENTRY_SUCCESS'\nexport const UPDATE_ENTRY_FAILED = 'UPDATE_ENTRY_FAILED'\n\nexport const DELETE_ENTRY_START = 'DELETE_ENTRY_START'\nexport const DELETE_ENTRY_SUCCESS = 'DELETE_ENTRY_SUCCESS'\nexport const DELETE_ENTRY_FAILED = 'DELETE_ENTRY_FAILED'\n\n//Action Creators\nexport function register(email, password, firstName, lastName){\n    return (dispatch) => {\n        dispatch({type: REGISTER_USER_START})\n        return axios.post('https://link-in-bio.herokuapp.com/auth/register', { email, password, firstName, lastName } )\n        .then((res) => {\n            const payload = res.data\n            localStorage.setItem('token', res.data.token)\n            localStorage.setItem('userId', res.data.userId)\n            localStorage.setItem('email', res.data.email)\n            localStorage.setItem('firstName', res.data.firstName)\n            dispatch({type:REGISTER_USER_SUCCESS, payload})\n        })\n        .catch((err) => {\n            dispatch({type:REGISTER_USER_FAILED, payload:err})\n        })\n    }\n}\n\nexport function login(email, password){\n    return (dispatch) => {\n        dispatch({type: LOGIN_USER_START})\n        return axios.post('https://link-in-bio.herokuapp.com/auth/login', { email, password })\n        .then((res) => {\n            const payload = res.data\n            localStorage.setItem('token', res.data.token)\n            localStorage.setItem('userId', res.data.userId)\n            localStorage.setItem('email', res.data.email)\n            localStorage.setItem('firstName', res.data.firstName)\n            // console.log(res.data.token,'LOG IS HERE <---')\n            dispatch({type: LOGIN_USER_SUCCESS, payload})\n        })\n        .catch((res) => {\n            const payload = res.response ? res.response.data : res\n            dispatch({type: LOGIN_USER_FAILED, payload})\n            console.log(res,'LOG IS HERE <---')\n        })\n    }\n}\n\nexport function createList(userId, backColor, txtColor, fontSelection){\n    return (dispatch) => {\n        dispatch({type: CREATE_LIST_START})\n        return axios.post('https://link-in-bio.herokuapp.com/l/new', { userId, backColor, txtColor, fontSelection })\n        .then((res) => {\n            dispatch({type: CREATE_LIST_SUCCESS, payload: res.data})\n        })\n        .catch((err) => {\n            dispatch({type: CREATE_LIST_FAILED, payload:err})\n        })\n    }\n}\n\nexport function addEntry(userId, listId, referencingURL, description, linkTitle){\n    return (dispatch) => {\n        dispatch({type: ADD_ENTRY_START})\n        return axios.post('https://link-in-bio.herokuapp.com/e/new', { userId, listId, referencingURL, description, linkTitle })\n        .then((res) => {\n            console.log('addEntry res.data.message', res.data.message);\n            dispatch({type: ADD_ENTRY_SUCCESS, payload:res.data})\n        })\n        .catch((err) => {\n            dispatch({type: ADD_ENTRY_FAILED, payload:err})\n        })\n    }\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport { register } from '../actions'\n\nclass Register extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            email: '',\n            password: '',\n            firstName: '',\n            lastName: '',\n        }\n    }\n\n    handleChange2 = (evt) => {\n        evt.preventDefault()\n        this.setState({\n            [evt.target.name]: evt.target.value,\n        })\n    }\n\n    handleSubmit = (evt) => {\n        evt.preventDefault()\n        const { email, password, firstName, lastName } = this.state\n        this.props.register(email, password, firstName, lastName)\n        this.setState({ email: '', password: '', firstName: '', lastName: '', })\n        this.props.history.push('./Dashboard')\n    }\n\n    render() {\n        const { email, password, firstName, lastName } = this.state\n        return (\n            <div>\n                <div className='signupheader'>\n                    <h1>LinkList Sign Up</h1>\n                    <p>Thanks for your interest!</p>\n                </div>\n                <form onSubmit={this.handleSubmit}>\n                    <input type=\"text\" name=\"email\" placeholder=\"Email\" value={email} onChange={this.handleChange2} required /><br/>\n                    <input type=\"password\" name=\"password\" placeholder=\"Password\" value={password} onChange={this.handleChange2} required /><br/>\n                    <input type=\"text\" name=\"firstName\" placeholder=\"First Name\" value={firstName} onChange={this.handleChange2} required /><br/>\n                    <input type=\"text\" name=\"lastName\" placeholder=\"Last Name\" value={lastName} onChange={this.handleChange2} required /><br/>\n                    {/*need to confirm password here*/}\n\n                    <button type=\"submit\">Sign Up</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = {\n    register\n}\n\nexport default connect(null, mapDispatchToProps)(Register)","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { login } from '../actions/index'\n\nclass Login extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            email: '',\n            password: '',\n        }\n    }\n\n    handleChange = (evt) => {\n        evt.preventDefault()\n        this.setState({\n            [evt.target.name]: evt.target.value,\n        })\n    }\n\n    handleSubmit = (evt) => {\n        evt.preventDefault()\n        const { email, password } = this.state\n\n        this.props.login(email, password)\n            .then(() => {\n                this.props.history.push(\"./dashboard\")\n            })\n            .catch((err) => { console.error(err) })\n    }\n\n    render() {\n        const { email, password } = this.state\n        const { isLoading } = this.props\n        return (\n            <div>\n                <h1>Log In</h1>\n                <form onSubmit={this.handleSubmit}>\n                    {/* {errorMessage && <p className=\"error\">{errorMessage}</p>} */}\n                    <input type=\"text\" name=\"email\" placeholder=\"email\" value={email} onChange={this.handleChange} /><br />\n                    <input type=\"password\" name=\"password\" placeholder=\"Password\" value={password} onChange={this.handleChange} /><br />\n                    {isLoading\n                        ? <p>Logging in...</p>\n                        : <button type=\"submit\">Log In</button>}\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isLoading: state.isLoading,\n    errorMessage: state.errorMessage\n})\n\nconst mapDispatchToProps = {\n    login,\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n    )(Login)\n)","import React from 'react'\n\nconst FailedLogin = () => {\n    return (\n        <div>\n            <h1>Your login attempt failed. Please go back and try again.</h1>\n        </div>\n    )\n}\n\nexport default FailedLogin","import React from 'react'\nimport { connect } from 'react-redux'\nimport { createList } from '../actions/index'\n\nclass CreateList extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            userId: localStorage.getItem('userId'),\n            backColor: '#ffffff',\n            txtColor: '#000000',\n            fontSelection: 'sans-serif',\n        }\n    }\n\n    handleChange = (evt) => {\n        evt.preventDefault()\n        this.setState({\n            [evt.target.name]: evt.target.value,\n        })\n    }\n\n    handleSubmit = (evt) => {\n        evt.preventDefault()\n        const { userId, backColor, txtColor, fontSelection } = this.state\n        this.props.createList(userId, backColor, txtColor, fontSelection)\n        this.setState({ userId:'', backColor:'', txtColor:'', fontSelection:'' })\n    }\n\n    render() {\n        const { userId, backColor, txtColor, fontSelection } = this.state\n        return (\n            <div>\n                <h1 className=\"newpickupheader\">Create A List</h1>\n                <form onSubmit={this.handleSubmit}>\n                    <input type=\"text\" name=\"userId\" value={userId} placeholder={localStorage.getItem('userId')} onChange={this.handleChange} required /><br />\n                    <input type=\"text\" name=\"backColor\" value={backColor} placeholder=\"Set Background Color\" onChange={this.handleChange} required /><br />\n                    <input type=\"text\" name=\"txtColor\" value={txtColor} placeholder=\"Set Text Color\" onChange={this.handleChange} required /><br />\n                    <input type=\"text\" name=\"fontSelection\" value={fontSelection} placeholder=\"Set Font\" onChange={this.handleChange} required /><br />\n                    <button type=\"submit\" className=\"abutton2\">Create List</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = { createList }\n\nexport default connect(null, mapDispatchToProps)(CreateList)","import React from 'react'\nimport { connect} from 'react-redux'\nimport { withRouter, Link } from 'react-router-dom'\nimport CreateList from './CreateList'\n// import MyRequestsBusiness from './MyRequestsBusiness'\n\nconst Dashboard = (props) => {\n    \n    // const {loggedUser} = props\n    // console.log(loggedUser)\n    return (\n        <div>\n            <h1>Dashboard</h1>\n            <p>Welcome {localStorage.getItem('firstName')}!</p>\n            <p>Your User Id is {localStorage.getItem('userId')}</p>\n            <p>To get started, create a list, then add your entries!</p>\n            <p>Your LinkList will be hosted at: <a alt=\"Your LinkList\" href=\"https://link-in.bio/\">https://link-in.bio/{localStorage.getItem('userId')}</a></p>\n            <a href=\"#neworder\" className=\"abutton\" role=\"button\">Create a New List</a>\n            <div className=\"modal\" id=\"neworder\">\n                <div className=\"modal-container\">\n                    <CreateList />\n                    {/* eslint-disable-next-line */}\n                    <a href=\"#\" className=\"abutton2\" role=\"button\">Close</a>\n                </div>\n            </div>\n            <br />\n            {/* <Link to='/UpdateFoodItem'><span className=\"abutton\">Update/Delete a Food Item</span></Link> */}\n            <br /><br />\n            {/* <button type=\"button\" className=\"abutton\">Log Out</button> */}\n            <Link to='/'><span className=\"abutton\">Log Out</span></Link>            \n            {/* <MyRequestsBusiness /> */}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {loggedUser: state.loggedUser}\n}\n\n\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n    )(Dashboard)\n)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { addEntry } from '../actions/index'\n\nclass AddEntry extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            userId: localStorage.getItem('userId'),\n            listId: '',\n            referencingURL: '',\n            description: '',\n            linkTitle: '',\n        }\n    }\n\n    handleChange = (evt) => {\n        evt.preventDefault()\n        this.setState({\n            [evt.target.name]: evt.target.value,\n        })\n    }\n\n    handleSubmit = (evt) => {\n        evt.preventDefault()\n        const { userId, listId, referencingURL, description, linkTitle } = this.state\n        this.props.addEntry(userId, listId, referencingURL, description, linkTitle)\n        this.setState({ userId: localStorage.getItem('userId'), listId: '', referencingURL:'', description: '', linkTitle: '', })\n    }\n\n    render() {\n        const { userId, listId, referencingURL, description, linkTitle } = this.state\n        return (\n            <div>\n                <h1 className=\"newpickupheader\">Schedule New Pickup</h1>\n                <form onSubmit={this.handleSubmit}>\n                    <input type=\"text\" name=\"userId\" value={userId} placeholder=\"Your User Id\" onChange={this.handleChange} required /><br />\n                    <input type=\"text\" name=\"listId\" value={listId} placeholder=\"Your List Id\" onChange={this.handleChange} required /><br />\n                    <input type=\"text\" name=\"referencingURL\" value={referencingURL} placeholder=\"URL to Link\" onChange={this.handleChange} required /><br />\n                    <input type=\"text\" name=\"description\" value={description} placeholder=\"Food item description\" onChange={this.handleChange} required /><br />\n                    <input type=\"text\" name=\"linkTitle\" value={linkTitle} placeholder=\"Add A Title for Your Link\" onChange={this.handleChange} required /><br />\n                    <button type=\"submit\" className=\"abutton2\">Add Link to List</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = { addEntry }\n\nexport default connect(null, mapDispatchToProps)(AddEntry)","import React from 'react';\nimport './App.css';\nimport { Route } from 'react-router-dom'\nimport PrivateRoute from './components/PrivateRoute'\nimport LandingPage from './components/LandingPage'\nimport Register from './components/Register'\nimport Login from './components/Login'\nimport FailedLogin from './components/FailedLogin'\nimport Dashboard from './components/Dashboard'\nimport CreateList from './components/CreateList'\nimport AddEntry from './components/AddEntry'\n// import EditEntry from './components/EditEntry'\n// import ListDisplay from './components/ListDisplay'\n\n\n\nclass App extends React.Component {\n\n  // logout = (evt) => {\n  //   evt.preventDefault()\n  //   localStorage.removeItem('token')\n  //   this.props.history.push('/login')\n  // }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Route exact path=\"/\" component={LandingPage} />\n        <Route exact path=\"/register\" component={Register} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/failedlogin\" component={FailedLogin} />\n        {/* <Route exact path=\"/listdisplay\" component={ListDisplay}/> */}\n        <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n        <PrivateRoute exact path=\"/createlist\" component={CreateList} />\n        <PrivateRoute exact path=\"/addentry\" component={AddEntry} />\n        {/* <PrivateRoute exact path=\"/editentry\" component={EditEntry} /> */}\n      </div>\n    )\n  }\n}\n\nexport default App;\n","//Action Imports\nimport {\n    REGISTER_USER_START,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILED,\n    LOGIN_USER_START,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAILED,\n    CREATE_LIST_START,\n    CREATE_LIST_SUCCESS,\n    CREATE_LIST_FAILED,\n    ADD_ENTRY_START,\n    ADD_ENTRY_SUCCESS,\n    ADD_ENTRY_FAILED,\n    UPDATE_ENTRY_START,\n    UPDATE_ENTRY_SUCCESS,\n    UPDATE_ENTRY_FAILED,\n    DELETE_ENTRY_START,\n    DELETE_ENTRY_SUCCESS,\n    DELETE_ENTRY_FAILED\n} from '../actions/'\n\n//Initial State Object\nconst initialState = {\n\n}\n\n//The Single Reducer for the Whole Application\nexport const reducer = (state=initialState, action) => {\n    switch(action.type){\n        case REGISTER_USER_START:\n            return {\n                ...state,\n                isLoading:true,\n            }\n        case REGISTER_USER_SUCCESS:\n            return {\n                ...state,\n                isLoading:false,\n                payload: action.payload,\n                errorMessage: null,\n            }\n        case REGISTER_USER_FAILED:\n            return {\n                ...state,\n                isLoading:false,\n                errorMessage: action.payload,\n            }\n        case LOGIN_USER_START:\n            return {\n                ...state,\n                isLoading: true,\n            }\n        case LOGIN_USER_SUCCESS:\n            return {\n                ...state,\n                isLoading:false,\n                payload: action.payload,\n                errorMessage: null,\n                loggedUser: action.payload\n            }\n        case LOGIN_USER_FAILED:\n            return {\n                ...state, \n                isLoading:false,\n                errorMessage: action.payload,\n            }\n        case CREATE_LIST_START:\n            return {\n                ...state,\n                isLoading:true,\n        }\n        case CREATE_LIST_SUCCESS:\n            return {\n                ...state,\n                isLoading:false,\n                errorMessage: null,\n            }\n        case CREATE_LIST_FAILED:\n            return {\n                ...state,\n                isLoading:false,\n                errorMessage: action.payload,\n        }\n        case ADD_ENTRY_START:\n            return {\n                ...state,\n                isLoading:true,\n        }\n        case ADD_ENTRY_SUCCESS:\n            return {\n                ...state,\n                isLoading:false,\n                errorMessage: null,\n            }\n        case ADD_ENTRY_FAILED:\n            return {\n                ...state,\n                isLoading:false,\n                errorMessage: action.payload,\n            }\n        case UPDATE_ENTRY_START:\n            return {\n                ...state,\n                isLoading:true,\n            }\n        case UPDATE_ENTRY_SUCCESS:\n            return {\n                ...state,\n                isLoading:false,\n                errorMessage:null,\n            }\n        case UPDATE_ENTRY_FAILED:\n            return {\n                ...state,\n                isLoading:false,\n                errorMessage: action.payload\n            }\n        case DELETE_ENTRY_START:\n            return {\n                ...state,\n                isLoading:true,\n            }\n        case DELETE_ENTRY_SUCCESS:\n            return {\n                ...state,\n                isLoading:false,\n            }\n        case DELETE_ENTRY_FAILED:\n            return {\n                ...state,\n                isLoading:false,\n                error: action.payload,\n            }\n        default:\n            return state\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport logger from 'redux-logger'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter} from 'react-router-dom'\nimport { reducer } from './reducers'\n\n\nconst store = createStore(reducer, applyMiddleware(thunk, logger))\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>, document.getElementById('root'));"],"sourceRoot":""}